apply plugin: 'com.android.application'
ext.mainApp = true //标记为主app module
project.apply plugin: 'cc-register'
project.apply plugin: 'bugly'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: file('../component_auto_register.gradle')
apply from: file('../xinge.gradle')
apply from: file('../jpush.gradle')
apply from: file('../bugly.gradle')
apply from: file('../hwpush.gradle')
bugly {
  appId = Bugly.APPID
  appKey = Bugly.APPKEY
}

android {

  compileSdkVersion AndroidConfig.compileSdkVersion
  buildToolsVersion AndroidConfig.buildToolsVersion
  defaultConfig {
    applicationId 'com.code.demo'
    minSdkVersion AndroidConfig.minSdkVersion
    targetSdkVersion AndroidConfig.targetSdkVersion
    versionCode AndroidConfig.versionCode
    versionName AndroidConfig.versionName
    resConfigs "zh", "xxhdpi"
    multiDexEnabled true
    manifestPlaceholders = [
        //信鸽
        XG_ACCESS_ID: Xinge.XG_ACCESS_ID,
        XG_ACCESS_KEY: Xinge.XG_ACCESS_KEY,
        //JPUSH
        JPUSH_PKGNAME: AndroidConfig.applicationId,
        JPUSH_APPKEY: Jpush.JPUSH_APPKEY, //JPush 上注册的包名对应的 Appkey.
        JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
    ]
    buildConfigField "String", "BUGLY_APP_ID", "\"" + Bugly.APPID + "\""
    buildConfigField "boolean", "BUGLY_APP_UPDATE", "${Bugly.UPDATE}"
    ndk {
      abiFilters 'armeabi'
    }
  }
  signingConfigs {
    config {
      storeFile file("../development.jks")
      storePassword "nothing"
      keyAlias "cframe"
      keyPassword "nothing"
      v1SigningEnabled true
      v2SigningEnabled true
    }
  }
  buildTypes {
    release {
      // 混淆
      minifyEnabled true
      // Zipalign优化
      zipAlignEnabled true
      // 移除无用的resource文件
      shrinkResources true
      multiDexEnabled true
      multiDexKeepFile file('maindexlist.keep')
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

      signingConfig signingConfigs.config
    }
    debug {
      signingConfig signingConfigs.config
    }
  }
  compileOptions {
    sourceCompatibility AndroidConfig.javaVersion
    targetCompatibility AndroidConfig.javaVersion
  }
  dexOptions {
    //如果开启multi-dex, 此句无效
    incremental true
    //配置是否预dex Libraries库工程，默认值为true，开启后会提高增量构建的速度
    preDexLibraries true
    // 最大堆内存
    javaMaxHeapSize "4g"
    // 是否支持大工程模式
    jumboMode = true
    // 线程数
    threadCount = 12
  }
  repositories {
    flatDir {
      dirs 'libs'
    }
  }
  lintOptions {
    checkReleaseBuilds false
    // Or, if you prefer, you can continue to check for errors in release builds,
    // but continue the build even when errors are found:
    abortOnError false
  }
  sourceSets {
    main.jniLibs.srcDirs = ['libs']
  }
  //    useLibrary 'org.apache.http.legacy'
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation Kotlin.core
  implementation Kotlin.stdlib
}

