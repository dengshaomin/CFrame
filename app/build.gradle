//apply plugin: 'com.android.application'
ext.mainApp = true //标记为主app module
project.apply plugin: 'cc-register'
project.apply plugin: 'bugly'
apply from: rootProject.file('component_auto_register.gradle')
apply from: rootProject.file('xinge.gradle')
apply from: rootProject.file('jpush.gradle')
apply from: rootProject.file('bugly.gradle')
bugly {
    appId = rootProject.bugly.APPID
    appKey = rootProject.bugly.APPKEY
}
android {

    compileSdkVersion rootProject.build.compileSdkVersion
    defaultConfig {
        applicationId rootProject.build.applicationId
        minSdkVersion rootProject.build.minSdkVersion
        targetSdkVersion rootProject.build.targetSdkVersion
        versionCode rootProject.build.versionCode
        versionName rootProject.build.versionName
        multiDexEnabled true
        manifestPlaceholders = [
                //信鸽
                XG_ACCESS_ID : rootProject.xinge.XG_ACCESS_ID,
                XG_ACCESS_KEY: rootProject.xinge.XG_ACCESS_KEY,
                //JPUSH
                JPUSH_PKGNAME: rootProject.build.applicationId,
                JPUSH_APPKEY : rootProject.jpush.JPUSH_APPKEY, //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

        buildConfigField "String", "BUGLY_APP_ID", "\"" + rootProject.bugly.APPID + "\""
    }
    signingConfigs {
        config {
            storeFile file("../development.jks")
            storePassword "nothing"
            keyAlias "cframe"
            keyPassword "nothing"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            // 混淆
            minifyEnabled true
            // Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            multiDexEnabled true
            multiDexKeepFile file('maindexlist.keep')
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                abiFilters 'armeabi'
            }
            signingConfig signingConfigs.config
        }
        debug {
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        sourceCompatibility rootProject.JavaV
        targetCompatibility rootProject.JavaV
    }
    dexOptions {
        // 最大堆内存
        javaMaxHeapSize "4g"
        // 是否支持大工程模式
        jumboMode = true
        // 线程数
        threadCount = 8
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    sourceSets {
        main.jniLibs.srcDirs = ['libs']
    }
//    useLibrary 'org.apache.http.legacy'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

}
