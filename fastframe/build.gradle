apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

android {
  compileSdkVersion AndroidConfig.compileSdkVersion

  defaultConfig {
    minSdkVersion AndroidConfig.minSdkVersion
    targetSdkVersion AndroidConfig.targetSdkVersion
    versionCode AndroidConfig.versionCode
    versionName AndroidConfig.versionName
  }

  buildTypes {
    release {
      // 混淆
      minifyEnabled true
      // Zipalign优化
      zipAlignEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility AndroidConfig.javaVersion
    targetCompatibility AndroidConfig.javaVersion
  }
  kotlinOptions {
    jvmTarget = AndroidConfig.javaVersion.toString()
  }
}
dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  api Others.eventbus
  api Others.fastjson
  api(Others.advrecyclerview) {
    transitive = true
  }
  api Others.banner
  //最新版本
  api Others.JPTabBar
  api Others.FlycoTabLayout_Lib
  api Fresco.fresco
  api Fresco.animated_base_support
  api Fresco.animated_gif
  api Fresco.webpsupport
  api Fresco.animated_webp
  api Fresco.imagepipeline_okhttp3
  api Others.multidex
  api SupportConfig.constraint_layout
  api SupportConfig.appcompat_v7
  api Others.luban
  api Kotlin.coroutines
  api Immersionbar.immersionbar
  api Immersionbar.components
  api Immersionbar.ktx
  api Kotlin.stdlib_jdk
  api Others.retrofit
  api Others.xpopup
  api SupportConfig.coordinatorlayout
  api Hilt.viewmodel
  api KotlinKtx.viewmodel_ktx
  api KotlinKtx.activity_ktx
  // When using Kotlin.
  kapt Hilt.kapt
  // When using Java.
//  annotationProcessor Hilt.annotationProcessor
  debugImplementation Others.leakcanary
}
